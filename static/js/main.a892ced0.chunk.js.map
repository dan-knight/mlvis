{"version":3,"sources":["logic/utility.js","components/graph/Scatter.jsx","components/graph/Line.jsx","components/graph/Axes.jsx","components/graph/Graph.jsx","components/menu/Transport.jsx","components/menu/Inputs.jsx","components/layout.jsx","components/menu/ConfigMenu.jsx","components/menu/FeatureSelect.jsx","logic/importData.js","logic/linearAlgebra.js","logic/stat.js","logic/model.js","components/menu/Icons.jsx","components/menu/Correlation.jsx","App.js","serviceWorker.js","index.js"],"names":["checkFileExtension","filename","type","extension","startsWith","endsWith","getMax","array","reduce","max","nextValue","getEqualDivisions","range","amount","sectionSize","Array","from","keys","i","timeout","ms","Promise","resolve","setTimeout","Scatter","React","memo","props","fill","xData","map","d","cx","xScale","cy","yScale","yData","key","r","Line","f","x","coefficients","total","c","startX","xPoints","length","getD","stroke","color","Axes","Fragment","label","xLabel","tickSize","fontSize","yLabel","Axis","this","getLabelX","y","getLabelY","textAnchor","transform","getTransform","dy","getLabelDY","getTicks","Component","XAxis","startY","endX","YAxis","endY","Ticks","division","divisions","getDivisions","getTextAnchor","getTextX","getTextY","getTextDY","toFixed","PureComponent","XTicks","domain","YTicks","d3","require","Graph","getXScale","memoize","data","width","scaleLinear","getYScale","getXLinePoints","xLinePoints","viewBox","height","lines","l","theta","xName","yName","Transport","status","Button","variant","onClick","onStart","onPause","onReset","Input","Radio","options","o","RadioButton","checked","value","disabled","getDisabled","onChange","className","InputGroup","event","target","Text","ButtonGroup","toggle","ToggleButton","data-key","e","name","text","Row","children","Col","size","ConfigMenu","stateSettings","FeatureSelect","axios","default","dataForge","importFile","a","path","get","response","importCSV","CSVstring","fromCSV","dynamicTyping","assert","matrixMultiply","leftData","rightData","leftColumns","left","getColumnNames","rightColumns","right","col","getSeries","getRow","leftRow","rightCol","at","getCell","newRows","forEach","row","push","DataFrame","multiply","shape","assertShapesMatch","rows","columns","isDataFrame","getDataFrameShape","isSeries","isArray","0","prepareLeft","transpose","count","inflate","values","getArrayShape","prepareData","prepareDataFrame","deflate","Object","prepareSeries","Error","Series","getCorrelation","xErrors","getErrors","xStdDev","getStandardDeviation","yErrors","yStdDev","toArray","getCovariance","errors","sumOfSquaredError","Math","sqrt","mean","average","select","v","getNewModel","xColumn","getBlankColumn","maxExponent","yColumn","formatX","correlation","transposeX","m","n","predict","model","predictedValues","cost","getCost","Checkmark","class","xmlns","fill-rule","X","Correlation","threshold","abs","relationshipExists","App","fitLine","state","iter","settings","maxIter","all","gradientDescent","prevCost","intervalLength","then","newState","setState","handleStart","initialTheta","predictions","handlePause","handleReset","handleFeatureChange","newFeature","config","yFeature","xFeature","changeFeatures","handleChangeSetting","setting","testVal","learningRate","precision","prevPrediction","getNewTheta","regressionTerm","prevTheta","newPrediction","costDelta","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a892ced0.chunk.js","sourcesContent":["export function checkFileExtension(filename, type) {\n  const extension = type.startsWith('.') ? type  : '.' + type;\n  return filename.endsWith(extension) ? filename : filename + extension; \n};\n\nexport function getMax(array) {\n  return array.reduce((max, nextValue) => (max < nextValue ? nextValue : max), 0);\n};\n\nexport function getEqualDivisions(range, amount) {\n  const sectionSize = (range[1] - range[0]) / amount;\n\n  return Array.from([...Array(amount + 1).keys()], i => range[0] + i * sectionSize);\n};\n\nexport const timeout = ms => new Promise(resolve => setTimeout(resolve, ms));","import React from 'react';\n\nconst Scatter = React.memo(function(props) {\n  return (\n    <g fill=\"red\">\n      {props.xData.map((d, i) => {\n        return (<circle \n          cx={props.xScale(d)}\n          cy={props.yScale(props.yData[i])}\n          key={i}\n          r={2} />)})}\n    </g>\n  );\n});\n\nexport default Scatter;","import React from 'react';\n \nconst Line = React.memo(function(props) {\n  function f(x) {\n    return props.coefficients.reduce((total, c, i) => {\n      return total + (c * x ** i);\n    });\n  };\n\n  function getD() {\n    const startX = props.xPoints[0];\n    let d = `M${props.xScale(startX)} ${props.yScale(f(startX))}`;\n    \n    for (let i = 1; i < props.xPoints.length; i++) {\n      const x = props.xPoints[i];\n      d += ` L${props.xScale(x)} ${props.yScale(f(x))}`\n    };\n    \n    return d;\n  };\n\n  return (\n    <path d={getD()} stroke={props.color} fill=\"none\" />\n  )\n});\n\nexport default Line;","import { Component, PureComponent } from \"react\";\nimport React from 'react';\n\nimport { getEqualDivisions } from '../../logic/utility';\n\nconst Axes = React.memo(function(props) {\n  return(\n    <React.Fragment>\n      <XAxis label={props.xLabel} xScale={props.xScale} yScale={props.yScale}\n        tickSize={props.tickSize} fontSize={props.fontSize} />\n      <YAxis label={props.yLabel} xScale={props.xScale} yScale={props.yScale}\n        tickSize={props.tickSize} fontSize={props.fontSize} />\n    </React.Fragment>\n  )\n});\n\nexport default Axes;\n\nclass Axis extends Component {\n  fontSize = 1.4 * this.props.fontSize;\n\n  getD() {\n    return ''\n  };\n\n  getLabelX() {\n    return 0;\n  };\n\n  getLabelY() {\n    return 0;\n  };\n\n  getLabelDY() {\n    return 0;\n  };\n\n  getTransform() {\n    return '';\n  };\n\n  getTicks() {\n    return null;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <g fill=\"none\" stroke=\"black\">\n          <path d={this.getD()}></path>\n        </g>\n        <text \n          x={this.getLabelX()} y={this.getLabelY()}\n          textAnchor=\"middle\" transform={this.getTransform()}\n          fontSize={this.fontSize} dy={this.getLabelDY()}>\n            {this.props.label}</text>\n          {this.getTicks()}\n      </React.Fragment>\n    );\n  };\n};\n\nclass XAxis extends Axis {\n  getD() {\n    const startX = this.props.xScale.range()[0];\n    const startY = this.props.yScale.range()[0];\n    const endX = this.props.xScale.range()[1];\n    return `M${startX} ${startY} H${endX}`;\n  };\n\n  getLabelX() {\n    const range = this.props.xScale.range()[1] - this.props.xScale.range()[0];\n    const minimum = this.props.xScale.range()[0];\n    return range / 2 + minimum;\n  };\n\n  getLabelY() {\n    return 575;\n  };\n\n  getLabelDY() {\n    return -0.25 * this.fontSize;\n  };\n\n  getTicks() {\n    return <XTicks \n      xScale={this.props.xScale} yScale={this.props.yScale} \n      tickSize={this.props.tickSize} fontSize={this.fontSize} />\n  }\n\n};\n\nclass YAxis extends Axis {\n  getD() {\n    const startX = this.props.xScale.range()[0];\n    const startY = this.props.yScale.range()[0];\n    const endY = this.props.yScale.range()[1];\n    return `M${startX} ${startY} V${endY}`;\n  };\n\n  getLabelX() {\n    return this.props.yScale.range()[0] / 2 * -1\n  };\n\n  getLabelY() {\n    return 0;\n  };\n\n  getLabelDY() {\n    return this.fontSize;\n  };\n\n  getTransform() {\n    return 'rotate(270)';\n  };\n\n  getTicks() {\n    return <YTicks \n      xScale={this.props.xScale} yScale={this.props.yScale} \n      tickSize={this.props.tickSize} fontSize={this.fontSize} />\n  }\n}\n\nclass Ticks extends PureComponent {\n  fontSize = 0.6 * this.props.fontSize;\n\n  getDivisions() {\n    return [];\n  };\n\n  getD(division) {\n    return '';\n  };\n\n  getTextX(division) {\n    return 0;\n  };\n\n  getTextY(division) {\n    return 0;\n  };\n\n  getTextDY() {\n    return 0;\n  }\n\n  getTextAnchor() {\n    return '';\n  };\n\n  render() {\n    const divisions = this.getDivisions();\n\n    return (\n      <React.Fragment>\n        <g stroke=\"black\" fill=\"none\">\n          {divisions.map((division, i) => {\n            return <path d={this.getD(division)} key={`path${i}`} />\n          })}\n        </g>\n        <g fontSize={this.fontSize} textAnchor={this.getTextAnchor()}>\n          {divisions.map((division, i) => {\n            return (\n              <text \n                x={this.getTextX(division)} \n                y={this.getTextY(division)} dy={this.getTextDY()}\n                key={`text${i}`} >\n                  {division.toFixed(1)}\n              </text>\n            )\n          })}\n        </g>\n      </React.Fragment>\n    )\n  }\n};\n\nclass XTicks extends Ticks {\n  getDivisions() {\n    return getEqualDivisions(this.props.xScale.domain(), 10);\n  }\n\n  getD(division) {\n    return `M${this.props.xScale(division)} ${this.props.yScale.range()[0]} v${this.props.tickSize}`;\n  };\n\n  getTextX(division) {\n    return this.props.xScale(division);\n  };\n\n  getTextY(division) {\n    return this.props.yScale.range()[0] + this.props.tickSize;\n  };\n\n  getTextDY() {\n    return this.fontSize;\n  };\n\n  getTextAnchor() {\n    return \"middle\";\n  }\n};\n\nclass YTicks extends Ticks {\n  getDivisions() {\n    return getEqualDivisions(this.props.yScale.domain(), 10);\n  }\n\n  getD(division) {\n    return `M${this.props.xScale.range()[0]} ${this.props.yScale(division)} h-${this.props.tickSize}`;\n  };\n\n  getTextX(division) {\n    return this.props.xScale.range()[0] - this.props.tickSize - (this.fontSize / 2);\n  };\n\n  getTextY(division) {\n    return this.props.yScale(division);\n  };\n\n  getTextDY() {\n    return this.fontSize / 2\n  };\n\n  getTextAnchor() {\n    return \"end\";\n  };\n};\n\n","import React, { PureComponent } from 'react';\n\nimport { getMax, getEqualDivisions } from '../../logic/utility';\nimport Scatter from './Scatter';\nimport Line from './Line';\nimport Axes from './Axes';\n\nimport memoize from 'memoize-one';\nconst d3 = require('d3-scale');\n\nexport default class Graph extends PureComponent {\n  fontSize = 16;\n  tickSize = 5;\n  getXScale = memoize((data, width) => {\n    return d3.scaleLinear()\n      .domain([0, getMax(data) * 1.1])\n      .range([width - 825, width -25]);\n  });\n\n  getYScale = memoize(data => {\n    return d3.scaleLinear()\n      .domain([0, getMax(data) * 1.1])\n      .range([475, 25]);\n  });\n\n  getXLinePoints = memoize(xScale => getEqualDivisions(xScale.domain(), 1000));\n\n  render() {\n    const xScale = this.getXScale(this.props.xData, this.props.width);\n    const yScale = this.getYScale(this.props.yData);\n    const xLinePoints = this.getXLinePoints(xScale);\n\n    return (\n      <svg \n        viewBox={`0 0 ${this.props.width} ${this.props.height}`}>\n        {this.props.lines.map((l, i) => {\n          return <Line \n            coefficients={l.theta} key={i}\n            xScale={xScale} yScale={yScale} \n            xPoints={xLinePoints} color=\"lightblue\" />\n        })}\n        <Scatter \n          xData={this.props.xData}\n          yData={this.props.yData}\n          xScale={xScale}\n          yScale={yScale} />\n        <Axes \n          xLabel={this.props.xName} yLabel={this.props.yName} \n          xScale={xScale} yScale={yScale}\n          tickSize={this.tickSize} fontSize={this.fontSize} />\n      </svg>\n    );\n  };\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport default function Transport(props) {\n  const startButton = () => props.status !== 'complete' ? \n    <Button variant='outline-primary' onClick={props.onStart}>Start</Button> : null;\n\n  const pauseButton = () => <Button variant='outline-primary' onClick={props.onPause}>Pause</Button>;\n\n  const resetButton = () => props.status !== 'clean' ? \n    <Button variant='outline-primary'  onClick={props.onReset}>Reset</Button> : null;\n\n  return (\n    <div>\n      {props.status !== 'active' ? startButton() : pauseButton()}\n      {resetButton()}\n    </div>\n  );\n};","import React, { PureComponent } from 'react';\nimport { ButtonGroup as BootstrapButtonGroup, InputGroup, ToggleButton } from 'react-bootstrap';\n\nclass Input extends PureComponent {\n  getDisabled() {\n    return this.props.status !== 'clean';\n  };\n\n  render() {\n    return;\n  };\n};\n\nexport class Radio extends Input {\n  render() {\n    return (\n      <React.Fragment>\n        <h2>{this.props.label}</h2>\n        {this.props.options.map((o, i) => (\n          <RadioButton label={o}\n            checked={this.props.value === o} disabled={this.getDisabled()}\n            onClick={this.props.onChange} />\n        ))}\n      </React.Fragment>\n    );\n  };\n};\n\nfunction RadioButton(props) {\n  function handleClick(event) {\n    props.onClick(event.target.value);\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <InputGroup.Radio checked={props.checked} value={props.label} disabled={props.disabled} onClick={handleClick}/>\n      <InputGroup.Text className=\"mx-2\">{props.label}</InputGroup.Text>\n    </div>\n  );\n};\n\nexport class ButtonGroup extends Input {\n  render() {\n    return (\n      <React.Fragment>\n        <p className=\"mb-1\">{this.props.label}</p>\n        <BootstrapButtonGroup toggle>\n          {this.props.options.map((o, i) => (\n            <ToggleButton\n              key={i}\n              data-key={i}\n              type=\"radio\"\n              variant=\"outline-primary\"\n              value={o.value}\n              checked={this.props.value === o.value}\n              disabled={this.getDisabled()}\n              onChange={e => this.props.onChange(this.props.name, e.target.value)}\n            >\n              {o.text ? o.text : o.value}\n            </ToggleButton>\n          ))}\n        </BootstrapButtonGroup>\n      </React.Fragment>\n    );\n  };\n};\n\nexport class Slider extends Input {\n  render() {\n    return (\n      <div>\n        <input type='range' className=''\n          name={this.props.name} \n          min={this.props.min}\n          max={this.props.max}\n          value={this.props.value}\n          onChange={e => this.props.onChange(e)}\n          disabled={this.getDisabled()} />\n        <label>{this.props.value}</label>\n      </div>\n    );\n  };\n};","import React from 'react';\n\nconst Row = React.memo(function(props) {\n  return (\n    <div className=\"row\">\n      {props.children}\n    </div>\n  ); \n});\n\nconst Col = React.memo(function(props) {\n  return (\n    <div className={`col-lg-${props.size} p-4`}>\n      <div className={'rounded bg-white p-1'}>\n        <div className=\"m-4\">\n          {props.children}\n        </div>\n      </div>\n    </div>\n  )\n});\n\nconst Line = React.memo(function(props) {\n  return (\n    <div className=\"mb-4\">\n      {props.children}\n    </div>\n  );\n});\n\nexport { Row, Col, Line };","import React from 'react';\n\nimport { ButtonGroup } from './Inputs';\nimport { Line } from '../layout';\n\nconst ConfigMenu = React.memo(function(props) {\n  return (\n    <React.Fragment>\n      {[\n        {\n          name: 'maxIter',\n          label: 'Maximum Iterations',\n          options: [\n            { value: '1000' },\n            { value: '100' },\n            { value: '10' }\n          ]\n        },\n        {\n          name: 'learningRate',\n          label: 'Learning Rate',\n          options: [\n            { value: '1' },\n            { value: '0.1' },\n            { value: '0.01' },\n            { value: '0.001' },\n            { value: '0.0001' } \n          ]\n        },\n        {\n          name: 'precision',\n          label: 'Precision Threshold',\n          options: [\n            { value: '0.001' },\n            { value: '0.0001' },\n            { value: '0.00001' }\n          ]\n        }\n      ].map((d, i) => (\n        <Line>\n          <ButtonGroup \n            name={d.name}\n            label={d.label}\n            options={d.options}\n            value={props.stateSettings[d.name]}\n            onChange={props.onChange}\n            status={props.status}\n            key={i} />\n        </Line>\n      ))}\n        \n      {/* <Slider \n        name='intervalLength'\n        min={1000}\n        max={10000}\n        value={props.stateSettings.intervalLength}\n        onChange={props.onChange}\n        status={props.status} /> */}\n    </React.Fragment>\n  );\n});\n\nexport default ConfigMenu;","import React from 'react';\nimport { Radio } from './Inputs';\n\nconst FeatureSelect = React.memo(function(props) {\n  function handleChange(value) {\n    props.onChange(value, props.name);\n  };\n\n  return <Radio options={props.options} label={props.label} \n    status={props.status} value={props.value} onChange={handleChange} />\n});\n\nexport default FeatureSelect;","import { checkFileExtension } from './utility';\n\nconst axios = require('axios').default;\n\nconst dataForge = require('data-forge');\n\nexport async function importFile(filename, type) {\n  const path = '/mlvis/data/' + checkFileExtension(filename, type);\n\n  let response = await axios.get(path);\n  return response.data;\n}\n\nexport async function importCSV(filename) {\n  let CSVstring = await importFile(filename, 'csv');\n  return dataForge.fromCSV(CSVstring, {dynamicTyping: true});\n};\n\nexport const getBlankData = () => new dataForge.DataFrame({ values: []})","const dataForge = require('data-forge');\nconst assert = require('assert');\n\nexport function matrixMultiply(leftData, rightData) {\n  function prepareData() {\n    let right = { \n      data: rightData,\n      shape: []\n    };\n\n    const shapeErrorText = \"Matrix shapes do not match.\";\n\n    function assertShapesMatch() {\n      assert(right.shape.rows == left.shape.columns, shapeErrorText);\n    }\n    \n    function prepareLeft() {\n      let data;\n      let shape;\n\n      if (isDataFrame(leftData)) {\n        data = leftData;\n        shape = getDataFrameShape(leftData);\n      } else if (isSeries(leftData) || Array.isArray(leftData)) {\n        data = new dataForge.DataFrame({ \n          columns: { \n            0: leftData \n          }\n        })\n      } else throw \"First term must be a data-forge DataFrame/Series or array.\"\n\n      return { \n        data: data, \n        shape: getDataFrameShape(data)\n      };\n    };\n\n    const left = prepareLeft();\n\n    if (isDataFrame(right.data)) {\n      right.shape = getDataFrameShape(right.data);\n \n      if (right.shape.rows != left.shape.columns) {\n        assert(right.shape.columns = left.shape.columns, shapeErrorText);\n        right.data = transpose(right.data);\n        right.shape = getDataFrameShape(right.data);\n      };\n    } else if (isSeries(right.data)) {\n      right.shape = getSeriesShape(right.data);\n      assertShapesMatch();\n\n      right.data = right.data.inflate(values => ({ 0: values }));\n    } else if (Array.isArray(right.data)) {\n      right.shape = getArrayShape(right.data);\n      assertShapesMatch();\n\n      right.data = new dataForge.DataFrame(\n        {columns: { \n          0: right.data \n        }\n      });\n    } else throw \"Second term must be an array or a DataFrame/Series.\";\n\n    return { \n      left: left.data, \n      right: right.data \n    }\n  };\n\n  function multiply(data) {\n    const leftColumns = data.left.getColumnNames();\n    const rightColumns = data.right.getColumnNames().map(col => data.right.getSeries(col));\n  \n    function getCell(leftRow, rightCol) {\n      return leftColumns.reduce((total, col, i) => {\n        return total + (rightCol.at(i) * leftRow[col])\n      }, 0);\n    };\n\n    function getRow(leftRow) {\n      return rightColumns.reduce((o, col, i) => ({...o, [i]: getCell(leftRow, col)}), {})\n    };\n\n    let newRows = [];\n    data.left.forEach(row => { \n      const r = getRow(row);\n      newRows.push(r);\n    });\n\n    return new dataForge.DataFrame(newRows);\n  };\n  \n  return multiply(prepareData());\n};\n\nexport function transpose(data) {\n  let columns = {};\n  prepareDataFrame(data).deflate().forEach((row, i) => columns[i] = Object.values(row)); \n  return new dataForge.DataFrame({ columns: columns });\n};\n\nfunction prepareDataFrame(data) {\n  let d;\n\n  if (isDataFrame(data)) {\n    d = data;\n  } else if (isSeries(data) || Array.isArray(data)) {\n    d = new dataForge.DataFrame({ columns: { 0: data }});\n  } else throw \"Data must be an array or a DataFrame/Series.\"\n\n  return d;\n};\n\nexport function prepareSeries(data) {\n  let d;\n\n  if (isSeries(data)) {\n    d = data;\n  } else if (Array.isArray(data)) {\n    d = new dataForge.Series(data);\n  } else throw new Error('Data must be a Series or an array.');\n\n  return d;\n};\n\nfunction getDataFrameShape(data) {\n  return {\n    rows: data.count(),\n    columns: data.getColumnNames().length\n  };\n};\n\nfunction getSeriesShape(data) {\n  return {\n    rows: data.count(),\n    columns: 1\n  };\n};\n\nfunction getArrayShape(data) {\n  return {\n    rows: data.length,\n    columns: 1\n  };\n};\n\nfunction assertDataFrame(data) { \n  assert((isDataFrame(data)), 'First term must be a DataFrame.');\n};\n\n\nfunction isDataFrame(data) { return data instanceof dataForge.DataFrame; };\nfunction isSeries(data) { return data instanceof dataForge.Series; };\n\n","import { matrixMultiply, transpose, prepareSeries } from './linearAlgebra';\n\nexport function relationshipExists(correlation, n) {\n  if (n > 2) {\n    const threshold = 2 / Math.sqrt(n - 1);\n\n    return (Math.abs(correlation) >= threshold);\n  } else return false;\n};\n\nexport function getCorrelation(xData, yData) {\n  const x = prepareSeries(xData);\n  const y = prepareSeries(yData);\n\n  const xErrors = getErrors(x);\n  const xStdDev = getStandardDeviation(null, xErrors);\n\n  const yErrors = getErrors(y);\n  const yStdDev = getStandardDeviation(null, yErrors);\n\n  return getCovariance(xErrors, yErrors) / (xStdDev * yStdDev);\n};\n\nfunction getCovariance(xErrors, yErrors) {\n  return matrixMultiply(transpose(xErrors), yErrors).deflate().toArray()[0]['0'] / (xErrors.count() - 1);\n};\n\nfunction getStandardDeviation(data, errors) {\n  if (!errors) {\n    errors = getErrors(prepareSeries(data));\n  };\n  \n  const sumOfSquaredError = matrixMultiply(transpose(errors), errors).deflate().toArray()[0]['0'];\n  return Math.sqrt(sumOfSquaredError / (errors.count() - 1));\n};\n\nfunction getErrors(data, mean=null) {\n  if (!mean) {\n    mean = data.average();\n  };\n\n  return data.select(v => v - mean);\n};","import { matrixMultiply, transpose } from './linearAlgebra';\nimport { getCorrelation } from './stat';\n\nconst dataForge = require('data-forge');\n\nexport function getNewModel(\n  xColumn = getBlankColumn(),\n  maxExponent = 1, \n  yColumn = getBlankColumn(),\n  scaling = true\n) {\n\n  function scaleData(column) {\n    return column;\n  };\n\n  function formatX() {\n    const data = scaling ? scaleData(xColumn) : xColumn;\n\n    const columns = [...Array(maxExponent + 1).keys()].reduce((o, e, i) => {\n      return {...o, [i]: data.select(v => v ** e)}\n    }, {});\n\n    return new dataForge.DataFrame({ columns: columns })\n  };\n\n  const xData = formatX();\n  const yData = scaling ? scaleData(yColumn) : yColumn;\n\n  const correlation = () => {\n    try {\n      return getCorrelation(xColumn, yColumn);\n    } catch {\n      return null;\n    };\n  };\n\n  return {\n    xData: xData,\n    transposeX: transpose(xData),\n    yData : yData,\n    m: xData.count(),\n    n: xData.getColumnNames().length,\n    correlation: correlation()\n  };\n};\n\nexport function predict(model, coefficients) {\n  const predictedValues = matrixMultiply(model.xData, coefficients).getSeries('0');\n  \n  const getErrors = () => {\n    let errors = [];\n    predictedValues.forEach((v, i) => { errors.push( v - model.yData.at(i)) });\n    return errors;\n  };\n\n  const errors = getErrors();\n\n  const getCost = () => {\n    const m = model.yData.count();\n    const squaredErrors = errors.reduce((total, e) => total + (e ** 2), 0);\n    return squaredErrors / (2 * m);\n  };\n\n  return {\n    theta: coefficients,\n    values: predictedValues,\n    errors: errors,\n    cost: getCost()\n  };\n};\n\nconst getBlankColumn = () => new dataForge.Series([]);\n","import React from 'react';\n\nexport function Checkmark(props) {\n  return (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check2\" fill=\"green\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\" d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\n    </svg>\n  );\n};\n\nexport function X(props) {\n  return (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-x\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n    </svg>\n  );\n};","import React from 'react';\n\nimport { Checkmark, X } from './Icons';\n\nimport { relationshipExists } from '../../logic/stat'; \n\nexport default function Correlation(props) {\n  return (\n    <p>\n      {relationshipExists(props.model.correlation, props.model.m) ? <Checkmark /> : <X />}\n      {` Correlation: ${props.model.correlation.toFixed(2)}`}\n    </p> \n  );\n}","import React, { Component } from 'react';\n\nimport Graph from './components/graph/Graph';\nimport Transport from './components/menu/Transport';\nimport ConfigMenu from './components/menu/ConfigMenu';\nimport FeatureSelect from './components/menu/FeatureSelect';\nimport { Row, Col, Line } from './components/layout';\n\nimport { timeout } from './logic/utility';\nimport { importCSV, getBlankData } from './logic/importData';\nimport { getNewModel, predict } from './logic/model';\nimport { matrixMultiply } from './logic/linearAlgebra';\nimport Correlation from './components/menu/Correlation';\n\nexport default class App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      testVal: 0,\n      data: getBlankData(),\n      model: getNewModel(),\n      xFeature: '',\n      yFeature: '',\n      predictions: [],\n      status: 'clean',\n      iter: 0,\n      prevCost: 0,\n      settings: {\n        maxIter: '1000',\n        learningRate: '1',\n        precision: '0.001',\n        intervalLength: '1000'\n      }\n    };\n  };\n\n  async importData(filename) {\n    this.setState({ data: await importCSV(filename) });\n  };\n\n  async componentDidMount() {\n    const data = await importCSV('fish');\n    this.setState(() => ({ data: data }));\n\n    const columns = data.getColumnNames();\n    this.changeFeatures(columns[0], columns[1], data);\n  };\n\n  componentDidUpdate() {\n    if (this.state.status == 'active') {\n      this.fitLine()\n    };\n  };\n\n  changeFeatures(xName, yName, data=this.state.data) {\n    const model = getNewModel(\n      data.getSeries(xName), 1,\n      data.getSeries(yName));\n\n    this.setState({\n      xFeature: xName,\n      yFeature: yName,\n      model: model,\n      predictions: []\n    });\n  };\n\n  fitLine = async () =>  {\n    if (this.state.iter < this.state.settings.maxIter) {\n      Promise.all([\n        new Promise(resolve => { resolve(this.gradientDescent()) }),\n        timeout(this.state.prevCost * this.state.settings.intervalLength)\n      ]).then(values => {\n        if (this.state.status === 'active') {\n          const newState = values[0];\n          this.setState(newState);\n        };\n      });\n    } else this.setState({ status: 'complete' });\n  };\n\n  async gradientDescent() {\n    const prevPrediction = this.state.predictions[this.state.predictions.length - 1];\n\n    const getNewTheta = () => {\n      const regressionTerm = matrixMultiply(prevPrediction.errors, this.state.model.transposeX);\n\n      return prevPrediction.theta.map((prevTheta, i) => (\n        prevTheta - ((this.state.settings.learningRate / this.state.model.m) * regressionTerm.at(i)[0]))\n      );\n    };\n\n    const newPrediction = predict(this.state.model, getNewTheta())\n    \n    const costDelta = (prevPrediction.cost - newPrediction.cost) / prevPrediction.cost;\n\n    let newState = {\n      predictions: [...this.state.predictions, newPrediction],\n      iter: this.state.iter + 1,\n      prevCost: costDelta\n    };\n      \n    if (costDelta < this.state.settings.precision) { \n      newState.status = 'complete';\n    };\n\n    return newState;\n  };\n\n  handleStart = () => {\n    if (this.state.status === 'clean') {\n      const initialTheta = new Array(this.state.model.n).fill(0);\n\n      this.setState({\n        predictions: [predict(this.state.model, initialTheta)],\n      });\n    };\n\n    this.setState({\n      status: 'active',\n    });\n  };\n\n  handlePause = () => {\n    this.setState({\n      status: 'paused'\n    });\n  };\n\n  handleReset = () => {\n    this.setState(() => ({ \n      status: 'clean',\n      iter: 0,\n      prevCost: 0,\n      predictions: []\n    }));\n  };\n\n  handleFeatureChange = (newFeature, name) => { \n    this.setState(() => ({ [name]: newFeature }));\n\n    const config = name === 'xFeature' ? [newFeature, this.state.yFeature] : [this.state.xFeature, newFeature];\n    this.changeFeatures(...config);\n  };\n\n  handleChangeSetting = (setting, value) => {\n    this.setState({settings: {\n      ...this.state.settings,\n      [setting]: value\n    }});\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n        <Row>\n          <Col size=\"3\">\n            <FeatureSelect name={'xFeature'} label={'x Feature'}\n              options={this.state.data.getColumnNames().filter(c => c !== this.state.yFeature)} \n              status={this.state.status} value={this.state.xFeature} \n              onChange={this.handleFeatureChange}/>\n            <FeatureSelect name={'yFeature'} label={'y Feature'}\n              options={this.state.data.getColumnNames().filter(c => c !== this.state.xFeature)} \n              status={this.state.status} value={this.state.yFeature} \n              onChange={this.handleFeatureChange}/>\n            {this.state.model.correlation !== null && <Correlation model={this.state.model} />}\n          </Col>\n          <Col size=\"9\">\n            <Graph width=\"925\" height=\"575\"\n              xData={this.state.model.xData.getSeries('1').toArray()} xName={this.state.xFeature}\n              yData={this.state.model.yData.toArray()} yName={this.state.yFeature}\n              lines={this.state.predictions}  \n              />   \n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"6\">\n            <ConfigMenu \n              onChange={this.handleChangeSetting}\n              stateSettings={this.state.settings}\n              status={this.state.status} />\n          </Col>\n          <Col size=\"6\">\n            <Line>\n              <Transport \n                onStart={this.handleStart} \n                onPause={this.handlePause}\n                onReset={this.handleReset}\n                status={this.state.status} />\n            </Line>\n            {`Iterations: ${this.state.iter} `}\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}